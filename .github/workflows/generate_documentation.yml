# Simple workflow for deploying static content to GitHub Pages
name: Generate & Deploy Documentation

on:
  # Runs on pushes targeting the default branch with changes to the `website/` contents.
  push:
    branches: ["main"]
    paths:
      - website/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Access files.
      - name: Checkout
        uses: actions/checkout@v4

      # Prepare for submitting to Github pages.
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Install Rust for building documentation.
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      # Install MDBook for documentation.
      - name: Install MDBook
        run: cargo install mdbook

      # Bun used for custom step in MDBook build + running website building script.
      - name: Install Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # Haxe needed to build JS version of SillyScript for playground.
      - name: Setup Haxe
        uses: krdlab/setup-haxe@v1

      # SillyScript dependency installed.
      - name: Install Console.hx
        run: haxelib install console.hx

      # Build SillyScript for the web.
      - name: Build JS version of SillyScript
        run: haxe Builder.hxml js

      # Build the documentation by running build command on documentation.
      - name: Build Documentation
        run: mdbook build
        working-directory: website/documentation

      # Install the npm dependencies for building the playground page.
      - name: Get Dependencies for Building the Playground
        run: bun install
        working-directory: website/playground

      # Build the playground by running start script.
      - name: Build Playground
        run: bun run start
        working-directory: website/playground

      # Install the dependencies for the website build script.
      - name: Get Dependencies for Building the Site
        run: bun install --production
        working-directory: website

      # Collect all the various site projects together into a single directory using this script.
      - name: Build the Site
        run: bun BuildSite.ts
        working-directory: website

      # Upload result to as artifact.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './website/main_page'
          retention-days: 1

      # Put dat shit on the pages.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
